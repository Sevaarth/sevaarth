name: Manual Branch Update

on:
  workflow_dispatch:
    inputs:
      source-branch:
        description: "Source branch to merge from"
        required: true
        default: "dev"
      target-branch:
        description: "Target branch to merge into"
        required: true
        default: "stg"

jobs:
  update-branch:
    name: Merge Source Branch into Target Branch
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.source-branch }}

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Fetch all branches
        run: git fetch --all

      - name: Check if source branch exists
        run: |
          if ! git rev-parse --verify ${{ github.event.inputs.source-branch }}; then
            echo "Source branch ${{ github.event.inputs.source-branch }} does not exist!"
            exit 1
          fi

      - name: Check if target branch exists
        run: |
          if ! git rev-parse --verify ${{ github.event.inputs.target-branch }}; then
            echo "Target branch ${{ github.event.inputs.target-branch }} does not exist!"
            exit 1
          fi

      - name: Checkout target branch
        run: |
          git checkout ${{ github.event.inputs.target-branch }}

      - name: Merge source branch into target branch
        run: |
          git merge ${{ github.event.inputs.source-branch }} --no-ff --no-commit || true

      - name: Check for merge conflicts
        run: |
          if git ls-files -u | grep "."; then
            echo "Merge conflict detected. Please resolve conflicts manually."
            git merge --abort
            exit 1
          fi

      - name: Commit the merge if no conflicts
        if: success()
        run: |
          git commit -m "Merged ${{ github.event.inputs.source-branch }} into ${{ github.event.inputs.target-branch }}"

      - name: Push changes to target branch
        if: success()
        run: git push origin ${{ github.event.inputs.target-branch }}

      - name: Trigger CI/CD workflow (Optional)
        if: success()
        run: |
          echo "Triggering CI/CD for branch ${{ github.event.inputs.target-branch }}..."
          gh workflow run "Continuous Integration" --ref ${{ github.event.inputs.target-branch }}

      - name: Cleanup after failed merge
        if: failure()
        run: |
          echo "Cleaning up after failed merge."
          git reset --hard HEAD
          git clean -fd
